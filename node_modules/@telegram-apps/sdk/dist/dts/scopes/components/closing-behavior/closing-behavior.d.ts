/**
 * Signal indicating if the confirmation dialog should be shown, while the user
 * is trying to close the Mini App.
 */
export declare const isConfirmationEnabled: import('@telegram-apps/signals').Signal<boolean>;
/**
 * Signal indicating if the Closing Behavior component is currently mounted.
 */
export declare const isMounted: import('@telegram-apps/signals').Signal<boolean>;
/**
 * Disables the closing confirmation dialog.
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_MOUNTED
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @example
 * if (disableConfirmation.isAvailable()) {
 *   disableConfirmation();
 * }
 */
export declare const disableConfirmation: import('../../toolkit/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Enables the closing confirmation dialog.
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_MOUNTED
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @example
 * if (enableConfirmation.isAvailable()) {
 *   enableConfirmation();
 * }
 */
export declare const enableConfirmation: import('../../toolkit/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Mounts the Closing Behavior component restoring its state.
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @example
 * if (mount.isAvailable()) {
 *   mount();
 * }
 */
export declare const mount: import('../../toolkit/wrapSafe.js').SafeWrapped<() => void, false, never>;
/**
 * Unmounts the Closing Behavior component.
 */
export declare function unmount(): void;
