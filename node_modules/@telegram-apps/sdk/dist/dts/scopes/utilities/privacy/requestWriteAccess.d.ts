import { WriteAccessRequestedStatus, AsyncOptions } from '@telegram-apps/bridge';
/**
 * Signal indicating if write access is currently being requested.
 */
export declare const isRequestingWriteAccess: import('@telegram-apps/signals').Signal<boolean>;
/**
 * Requests write message access to the current user.
 * @param options - additional options.
 * @since Mini Apps v6.9
 * @throws {TypedError} ERR_ALREADY_REQUESTING
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @throws {TypedError} ERR_NOT_SUPPORTED
 * @example
 * if (requestWriteAccess.isAvailable()) {
 *   const status = await requestWriteAccess();
 * }
 */
export declare const requestWriteAccess: import('../../toolkit/wrapSafe.js').SafeWrapped<(options?: AsyncOptions) => Promise<WriteAccessRequestedStatus>, true, never>;
