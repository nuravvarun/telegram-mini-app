import { AsyncOptions, CancelablePromise } from '@telegram-apps/bridge';
/**
 * Requested contact information.
 */
export interface RequestedContact {
    contact: {
        userId: number;
        phoneNumber: string;
        firstName: string;
        lastName?: string;
    };
    authDate: Date;
    hash: string;
}
/**
 * Requests current user contact information. In contrary to requestPhoneAccess, this method
 * returns promise with contact information that rejects in case, user denied access, or request
 * failed.
 * @param options - additional options.
 * @since Mini Apps v6.9
 * @throws {TypedError} ERR_UNKNOWN_ENV
 * @throws {TypedError} ERR_NOT_INITIALIZED
 * @throws {TypedError} ERR_ACCESS_DENIED
 * @throws {TypedError} ERR_CUSTOM_METHOD_ERR_RESPONSE
 * @throws {TypedError} ERR_NOT_SUPPORTED
 * @example
 * if (requestContact.isAvailable()) {
 *   const contact = await requestContact();
 * }
 */
export declare const requestContact: import('../../toolkit/wrapSafe.js').SafeWrapped<(options?: AsyncOptions) => CancelablePromise<RequestedContact>, true, never>;
