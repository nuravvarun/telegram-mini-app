import { useMemo as qo, useSyncExternalStore as Ho } from "react";
let it = class An extends Error {
  constructor(e, n, r) {
    super(
      typeof n == "object" ? n.message : n || e,
      {
        cause: typeof n == "object" ? n.cause : r
      }
    ), this.type = e, Object.setPrototypeOf(this, An.prototype);
  }
};
function Rn(t) {
  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);
}
function Wo(t) {
  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());
}
const zo = "ERR_INVALID_VALUE", Go = "ERR_UNEXPECTED_VALUE", Fo = "ERR_UNEXPECTED_TYPE", Bn = "ERR_PARSE";
function Pn(t, e) {
  const n = {};
  for (const r in t) {
    const o = t[r];
    if (!o)
      continue;
    let s, a;
    typeof o == "function" ? (s = r, a = o) : [s, a] = o;
    try {
      const i = a(e(s));
      i !== void 0 && (n[r] = i);
    } catch (i) {
      throw new it(
        Bn,
        `Parser for "${r}" property failed${s === r ? "" : `. Source field: "${s}"`}`,
        i
      );
    }
  }
  return n;
}
function Tn(t) {
  let e = t;
  if (typeof e == "string")
    try {
      e = JSON.parse(e);
    } catch (n) {
      throw new it(zo, { cause: n });
    }
  if (typeof e != "object" || !e || Array.isArray(e))
    throw new it(Go);
  return e;
}
function $(t, e) {
  return (n) => {
    const r = (o) => {
      if (!(n && o === void 0))
        try {
          return e(o);
        } catch (s) {
          throw new it(Bn, {
            message: `"${t}" transformer failed to parse the value`,
            cause: s
          });
        }
    };
    return /* @__PURE__ */ Object.assign(
      r,
      {
        isValid(o) {
          try {
            return r(o), !0;
          } catch {
            return !1;
          }
        }
      }
    );
  };
}
function Mt(t, e) {
  return $(e || "object", (n) => {
    const r = Tn(n);
    return Pn(t, (o) => r[o]);
  });
}
function St(t) {
  throw new it(Fo, `Unexpected value received: ${JSON.stringify(t)}`);
}
const Jo = $("boolean", (t) => {
  if (typeof t == "boolean")
    return t;
  const e = String(t);
  if (e === "1" || e === "true")
    return !0;
  if (e === "0" || e === "false")
    return !1;
  St(t);
}), j = $("string", (t) => {
  if (typeof t == "string" || typeof t == "number")
    return t.toString();
  St(t);
}), Vt = $("number", (t) => {
  if (typeof t == "number")
    return t;
  if (typeof t == "string") {
    const e = Number(t);
    if (!Number.isNaN(e))
      return e;
  }
  St(t);
}), Re = $("date", (t) => t instanceof Date ? t : new Date(Vt()(t) * 1e3));
function kn(t, e) {
  return $(e || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && St(n);
    const r = typeof n == "string" ? new URLSearchParams(n) : n;
    return Pn(t, (o) => {
      const s = r.get(o);
      return s === null ? void 0 : s;
    });
  });
}
function ie(t) {
  for (const e in t)
    t[e] = [Rn(e), t[e]];
  return t;
}
const Yo = (t) => {
  const e = Vt(), n = Vt(!0), r = j(), o = j(!0), s = Jo(!0), a = Mt(ie({
    addedToAttachmentMenu: s,
    allowsWriteToPm: s,
    firstName: r,
    id: e,
    isBot: s,
    isPremium: s,
    languageCode: o,
    lastName: o,
    photoUrl: o,
    username: o
  }), "User")(!0);
  return kn(
    ie({
      authDate: Re(),
      canSendAfter: n,
      chat: Mt(
        ie({
          id: e,
          type: r,
          title: r,
          photoUrl: o,
          username: o
        }),
        "Chat"
      )(!0),
      chatInstance: o,
      chatType: o,
      hash: r,
      queryId: o,
      receiver: a,
      startParam: o,
      user: a
    }),
    "initData"
  )(t);
};
function ct(t) {
  return /^#[\da-f]{6}$/i.test(t);
}
function Qo(t) {
  return /^#[\da-f]{3}$/i.test(t);
}
function On(t) {
  const e = t.replace(/\s/g, "").toLowerCase();
  if (ct(e))
    return e;
  if (Qo(e)) {
    let r = "#";
    for (let o = 0; o < 3; o += 1)
      r += e[1 + o].repeat(2);
    return r;
  }
  const n = e.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || e.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${t}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((r, o) => {
    const s = parseInt(o, 10).toString(16);
    return r + (s.length === 1 ? "0" : "") + s;
  }, "#");
}
const Ko = $("rgb", (t) => On(j()(t))), Zo = $(
  "themeParams",
  (t) => {
    const e = Ko(!0);
    return Object.entries(Tn(t)).reduce((n, [r, o]) => (n[Wo(r)] = e(o), n), {});
  }
);
// @__NO_SIDE_EFFECTS__
function Xo(t) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(t).map(([e, n]) => [Rn(e), n])
    )
  );
}
// @__NO_SIDE_EFFECTS__
function Ni(t) {
  const { initDataRaw: e, startParam: n, showSettings: r, botInline: o } = t, s = new URLSearchParams();
  return s.set("tgWebAppPlatform", t.platform), s.set("tgWebAppThemeParams", /* @__PURE__ */ Xo(t.themeParams)), s.set("tgWebAppVersion", t.version), e && s.set("tgWebAppData", e), n && s.set("tgWebAppStartParam", n), typeof r == "boolean" && s.set("tgWebAppShowSettings", r ? "1" : "0"), typeof o == "boolean" && s.set("tgWebAppBotInline", o ? "1" : "0"), s.toString();
}
function tr(t, e) {
  return $("array", (n) => {
    let r;
    if (Array.isArray(n))
      r = n;
    else if (typeof n == "string")
      try {
        const o = JSON.parse(n);
        Array.isArray(o) && (r = o);
      } catch {
      }
    return r || St(n), r.map(t);
  });
}
function Dn(t) {
  return !!t && typeof t == "object" && !Array.isArray(t);
}
function fe(...t) {
  return t.map((e) => {
    if (typeof e == "string")
      return e;
    if (Dn(e))
      return fe(Object.entries(e).map((n) => n[1] && n[0]));
    if (Array.isArray(e))
      return fe(...e);
  }).filter(Boolean).join(" ");
}
function Li(...t) {
  return t.reduce((e, n) => (Dn(n) && Object.entries(n).forEach(([r, o]) => {
    const s = fe(e[r], o);
    s && (e[r] = s);
  }), e), {});
}
let ut = class xn extends Error {
  constructor(e, n, r) {
    super(
      typeof n == "object" ? n.message : n || e,
      {
        cause: typeof n == "object" ? n.cause : r
      }
    ), this.type = e, Object.setPrototypeOf(this, xn.prototype);
  }
};
function Mn(t) {
  return t.replace(/[A-Z]/g, (e) => `_${e.toLowerCase()}`);
}
function er(t) {
  return t.replace(/_[a-z]/g, (e) => e[1].toUpperCase());
}
const nr = "ERR_INVALID_VALUE", or = "ERR_UNEXPECTED_VALUE", rr = "ERR_UNEXPECTED_TYPE", Vn = "ERR_PARSE";
function In(t, e) {
  const n = {};
  for (const r in t) {
    const o = t[r];
    if (!o)
      continue;
    let s, a;
    typeof o == "function" ? (s = r, a = o) : [s, a] = o;
    try {
      const i = a(e(s));
      i !== void 0 && (n[r] = i);
    } catch (i) {
      throw new ut(
        Vn,
        `Parser for "${r}" property failed${s === r ? "" : `. Source field: "${s}"`}`,
        i
      );
    }
  }
  return n;
}
function Nn(t) {
  let e = t;
  if (typeof e == "string")
    try {
      e = JSON.parse(e);
    } catch (n) {
      throw new ut(nr, { cause: n });
    }
  if (typeof e != "object" || !e || Array.isArray(e))
    throw new ut(or);
  return e;
}
function O(t, e) {
  return (n) => {
    const r = (o) => {
      if (!(n && o === void 0))
        try {
          return e(o);
        } catch (s) {
          throw new ut(Vn, {
            message: `"${t}" transformer failed to parse the value`,
            cause: s
          });
        }
    };
    return /* @__PURE__ */ Object.assign(
      r,
      {
        isValid(o) {
          try {
            return r(o), !0;
          } catch {
            return !1;
          }
        }
      }
    );
  };
}
function T(t, e) {
  return O(e || "object", (n) => {
    const r = Nn(n);
    return In(t, (o) => r[o]);
  });
}
function vt(t) {
  throw new ut(rr, `Unexpected value received: ${JSON.stringify(t)}`);
}
const It = O("boolean", (t) => {
  if (typeof t == "boolean")
    return t;
  const e = String(t);
  if (e === "1" || e === "true")
    return !0;
  if (e === "0" || e === "false")
    return !1;
  vt(t);
}), A = O("string", (t) => {
  if (typeof t == "string" || typeof t == "number")
    return t.toString();
  vt(t);
}), pt = O("number", (t) => {
  if (typeof t == "number")
    return t;
  if (typeof t == "string") {
    const e = Number(t);
    if (!Number.isNaN(e))
      return e;
  }
  vt(t);
}), sr = O("date", (t) => t instanceof Date ? t : new Date(pt()(t) * 1e3));
function Ln(t, e) {
  return O(e || "searchParams", (n) => {
    typeof n != "string" && !(n instanceof URLSearchParams) && vt(n);
    const r = typeof n == "string" ? new URLSearchParams(n) : n;
    return In(t, (o) => {
      const s = r.get(o);
      return s === null ? void 0 : s;
    });
  });
}
function ce(t) {
  for (const e in t)
    t[e] = [Mn(e), t[e]];
  return t;
}
const ar = (t) => {
  const e = pt(), n = pt(!0), r = A(), o = A(!0), s = It(!0), a = T(ce({
    addedToAttachmentMenu: s,
    allowsWriteToPm: s,
    firstName: r,
    id: e,
    isBot: s,
    isPremium: s,
    languageCode: o,
    lastName: o,
    photoUrl: o,
    username: o
  }), "User")(!0);
  return Ln(
    ce({
      authDate: sr(),
      canSendAfter: n,
      chat: T(
        ce({
          id: e,
          type: r,
          title: r,
          photoUrl: o,
          username: o
        }),
        "Chat"
      )(!0),
      chatInstance: o,
      chatType: o,
      hash: r,
      queryId: o,
      receiver: a,
      startParam: o,
      user: a
    }),
    "initData"
  )(t);
};
function ir(t) {
  return /^#[\da-f]{6}$/i.test(t);
}
function cr(t) {
  return /^#[\da-f]{3}$/i.test(t);
}
function ur(t) {
  const e = t.replace(/\s/g, "").toLowerCase();
  if (ir(e))
    return e;
  if (cr(e)) {
    let r = "#";
    for (let o = 0; o < 3; o += 1)
      r += e[1 + o].repeat(2);
    return r;
  }
  const n = e.match(/^rgb\((\d{1,3}),(\d{1,3}),(\d{1,3})\)$/) || e.match(/^rgba\((\d{1,3}),(\d{1,3}),(\d{1,3}),\d{1,3}\)$/);
  if (!n)
    throw new Error(`Value "${t}" does not satisfy any of known RGB formats.`);
  return n.slice(1).reduce((r, o) => {
    const s = parseInt(o, 10).toString(16);
    return r + (s.length === 1 ? "0" : "") + s;
  }, "#");
}
const pr = O("rgb", (t) => ur(A()(t))), lr = O(
  "themeParams",
  (t) => {
    const e = pr(!0);
    return Object.entries(Nn(t)).reduce((n, [r, o]) => (n[er(r)] = e(o), n), {});
  }
);
// @__NO_SIDE_EFFECTS__
function jn(t) {
  return JSON.stringify(
    Object.fromEntries(
      Object.entries(t).map(([e, n]) => [Mn(e), n])
    )
  );
}
const dr = (t) => {
  const e = A(), n = A(!0), r = It(!0);
  return Ln({
    botInline: ["tgWebAppBotInline", r],
    initData: ["tgWebAppData", ar(!0)],
    initDataRaw: ["tgWebAppData", n],
    platform: ["tgWebAppPlatform", e],
    showSettings: ["tgWebAppShowSettings", r],
    startParam: ["tgWebAppStartParam", n],
    themeParams: ["tgWebAppThemeParams", lr()],
    version: ["tgWebAppVersion", e]
  }, "launchParams")(t);
};
// @__NO_SIDE_EFFECTS__
function _r(t) {
  const { initDataRaw: e, startParam: n, showSettings: r, botInline: o } = t, s = new URLSearchParams();
  return s.set("tgWebAppPlatform", t.platform), s.set("tgWebAppThemeParams", /* @__PURE__ */ jn(t.themeParams)), s.set("tgWebAppVersion", t.version), e && s.set("tgWebAppData", e), n && s.set("tgWebAppStartParam", n), typeof r == "boolean" && s.set("tgWebAppShowSettings", r ? "1" : "0"), typeof o == "boolean" && s.set("tgWebAppBotInline", o ? "1" : "0"), s.toString();
}
const $n = T({
  eventType: A(),
  eventData: (t) => t
}, "miniAppsMessage"), Un = O("fn", (t) => {
  if (typeof t == "function")
    return t;
  vt(t);
});
function fr(t) {
  return !!t && typeof t == "object" && !Array.isArray(t);
}
const hr = T({
  TelegramWebviewProxy: T({ postEvent: Un() })()
});
function qn(t) {
  return hr().isValid(t);
}
function mr() {
  try {
    return window.self !== window.top;
  } catch {
    return !0;
  }
}
var br = Object.defineProperty, gr = (t, e, n) => e in t ? br(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n, Hn = (t, e, n) => gr(t, typeof e != "symbol" ? e + "" : e, n);
let l = class Wn extends Error {
  constructor(e, n, r) {
    super(
      typeof n == "object" ? n.message : n || e,
      {
        cause: typeof n == "object" ? n.cause : r
      }
    ), this.type = e, Object.setPrototypeOf(this, Wn.prototype);
  }
};
function he(t, e, n) {
  return t.addEventListener(e, n), () => t.removeEventListener(e, n);
}
function Z(...t) {
  const e = t.flat(1);
  return [
    e.push.bind(e),
    () => {
      e.forEach((n) => {
        n();
      });
    }
  ];
}
function wr(t, e) {
  return t instanceof l && t.type === e;
}
function Be(t) {
  return (e) => wr(e, t);
}
const zn = "ERR_ABORTED", Gn = "ERR_CANCELED", Fn = "ERR_TIMED_OUT";
function pn(t) {
  return new l(zn, { cause: t });
}
const ji = Be(Fn), $i = Be(zn), Ui = Be(Gn);
function ln(t, e) {
  return t.reject = e.reject, t;
}
class g extends Promise {
  constructor(e, n) {
    let r, o;
    typeof e == "function" ? (r = e, o = n) : o = e;
    let s, a;
    super((i, p) => {
      o || (o = {});
      const { abortSignal: c } = o;
      if (c && c.aborted)
        return p(pn(c.reason));
      const [_, b] = Z(), w = (f) => (...W) => (b(), f(...W)), N = new AbortController(), { signal: S } = N;
      a = w((f) => {
        N.abort(f), p(f);
      }), s = w(i), c && _(
        he(c, "abort", () => {
          a(pn(c.reason));
        })
      );
      const { timeout: m } = o;
      if (m) {
        const f = setTimeout(() => {
          a(new l(Fn, `Timeout reached: ${m}ms`));
        }, m);
        _(() => {
          clearTimeout(f);
        });
      }
      r && r(s, a, S);
    }), Hn(this, "reject"), this.reject = a;
  }
  /**
   * Creates a new BetterPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(e, n) {
    return new g((r, o, s) => {
      try {
        const a = e(s);
        return a instanceof Promise ? a.then(r, o) : r(a);
      } catch (a) {
        o(a);
      }
    }, n);
  }
  /**
   * @see Promise.resolve
   */
  static resolve(e) {
    return new g((n) => {
      n(e);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(e) {
    return new g((n, r) => {
      r(e);
    });
  }
  /**
   * Cancels the promise execution.
   */
  cancel() {
    this.reject(new l(Gn));
  }
  /**
   * @see Promise.catch
   */
  catch(e) {
    return this.then(void 0, e);
  }
  /**
   * @see Promise.finally
   */
  finally(e) {
    return ln(super.finally(e), this);
  }
  /**
   * @see Promise.then
   */
  then(e, n) {
    return ln(super.then(e, n), this);
  }
}
function dn(t, e) {
  return t.resolve = e.resolve, t;
}
class ot extends g {
  constructor(e, n) {
    let r, o;
    typeof e == "function" ? (r = e, o = n) : o = e;
    let s;
    super((a, i, p) => {
      s = a, r && r(a, i, p);
    }, o), Hn(this, "resolve"), this.resolve = s;
  }
  /**
   * Creates a new EnhancedPromise instance using executor, resolving promise when a result
   * was returned.
   * @param fn - function returning promise result.
   * @param options - additional options.
   */
  static withFn(e, n) {
    return new ot(
      (r, o, s) => g.withFn(e, { abortSignal: s }).then(r, o),
      n
    );
  }
  /**
   * @see Promise.resolve
   */
  static resolve(e) {
    return new ot((n) => {
      n(e);
    });
  }
  /**
   * @see Promise.reject
   */
  static reject(e) {
    return new ot((n, r) => {
      r(e);
    });
  }
  /**
   * @see Promise.catch
   */
  catch(e) {
    return this.then(void 0, e);
  }
  /**
   * @see Promise.finally
   */
  finally(e) {
    return dn(super.finally(e), this);
  }
  /**
   * @see Promise.then
   */
  then(e, n) {
    return dn(super.then(e, n), this);
  }
}
function yr(t, e) {
  return new g((n) => {
    setTimeout(n, t);
  }, { abortSignal: e });
}
function Jn(t) {
  return `tapps/${t}`;
}
function R(t, e) {
  sessionStorage.setItem(Jn(t), JSON.stringify(e));
}
function B(t) {
  const e = sessionStorage.getItem(Jn(t));
  try {
    return e ? JSON.parse(e) : void 0;
  } catch {
  }
}
function Pe(t) {
  return t.replace(/[A-Z]/g, (e) => `-${e.toLowerCase()}`);
}
// @__NO_SIDE_EFFECTS__
function Er(t, e) {
  e || (e = {});
  const {
    textColor: n,
    bgColor: r,
    shouldLog: o = !0
  } = e;
  function s(a, ...i) {
    if (!o || typeof o == "function" && !o())
      return;
    const p = "font-weight:bold;padding:0 5px;border-radius:5px";
    console[a](
      `%c${Intl.DateTimeFormat("en-GB", {
        hour: "2-digit",
        minute: "2-digit",
        second: "2-digit",
        fractionalSecondDigits: 3,
        timeZone: "UTC"
      }).format(/* @__PURE__ */ new Date())}%c / %c${t}`,
      `${p};background-color: lightblue;color:black`,
      "",
      `${p};${n ? `color:${n};` : ""}${r ? `background-color:${r}` : ""}`,
      ...i
    );
  }
  return [
    function(...a) {
      s("log", ...a);
    },
    function(...a) {
      s("error", ...a);
    }
  ];
}
function Te(t, e) {
  document.documentElement.style.setProperty(t, e);
}
function ke(t) {
  document.documentElement.style.removeProperty(t);
}
function Sr(t, e) {
  e();
}
// @__NO_SIDE_EFFECTS__
function X(t, e) {
  e || (e = {});
  const n = e.equals || Object.is;
  let r = [], o = t;
  const s = (c) => {
    if (!n(o, c)) {
      const _ = o;
      o = c, Sr(p, () => {
        [...r].forEach(([b, w]) => {
          b(c, _), w && i(b, !0);
        });
      });
    }
  };
  function a(c) {
    const _ = typeof c != "object" ? { once: c } : c;
    return {
      once: _.once || !1,
      signal: _.signal || !1
    };
  }
  const i = (c, _) => {
    const b = a(_), w = r.findIndex(([N, S]) => N === c && S.once === b.once && S.signal === b.signal);
    w >= 0 && r.splice(w, 1);
  }, p = Object.assign(
    function() {
      return vr(p), o;
    },
    {
      destroy() {
        r = [];
      },
      set: s,
      reset() {
        s(t);
      },
      sub(c, _) {
        return r.push([c, a(_)]), () => i(c, _);
      },
      unsub: i,
      unsubAll() {
        r = r.filter((c) => c[1].signal);
      }
    }
  );
  return p;
}
const ue = [];
function vr(t) {
  ue.length && ue[ue.length - 1].add(t);
}
const Cr = /* @__PURE__ */ X(!1), [Oe, Ar] = /* @__PURE__ */ Er("Bridge", {
  bgColor: "#9147ff",
  textColor: "white",
  shouldLog: Cr
}), Rr = {
  clipboard_text_received: T({
    req_id: A(),
    data: (t) => t === null ? t : A(!0)(t)
  }, "clipboard_text_received"),
  custom_method_invoked: T({
    req_id: A(),
    result: (t) => t,
    error: A(!0)
  }, "custom_method_invoked"),
  popup_closed: O("popup_closed", (t) => t ? T({
    button_id: (e) => e == null ? void 0 : A()(e)
  })()(t) : {}),
  viewport_changed: T({
    height: pt(),
    width: (t) => t == null ? window.innerWidth : pt()(t),
    is_state_stable: It(),
    is_expanded: It()
  }, "viewport_changed")
};
function Br(t) {
  const e = window, [, n] = Z(
    // Add "resize" event listener to make sure, we always have fresh viewport information.
    // The desktop version of Telegram is sometimes not sending the "viewport_changed"
    // event. For example, when the Main Button is shown. That's why we should
    // add our own listener to make sure viewport information is always fresh.
    // Issue: https://github.com/Telegram-Mini-Apps/telegram-apps/issues/10
    he(e, "resize", () => {
      t(["viewport_changed", {
        width: window.innerWidth,
        height: window.innerHeight,
        is_state_stable: !0,
        is_expanded: !0
      }]);
    }),
    // Add listener, which handles events sent from the Telegram web application and also events
    // generated by the local emitEvent function.
    he(e, "message", (r) => {
      if (r.source !== e.parent)
        return;
      let o;
      try {
        o = $n()(r.data);
      } catch {
        return;
      }
      const { eventType: s, eventData: a } = o, i = Rr[s];
      try {
        const p = i ? i()(a) : a;
        Oe("Event received:", p ? { eventType: s, eventData: p } : { eventType: s }), t([s, p]);
      } catch (p) {
        Ar(
          [
            `An error occurred processing the "${s}" event from the Telegram application.`,
            "Please, file an issue here:",
            "https://github.com/Telegram-Mini-Apps/telegram-apps/issues/new/choose"
          ].join(`
`),
          o,
          p
        );
      }
    })
  );
  return n;
}
const me = /* @__PURE__ */ X(), _n = /* @__PURE__ */ X();
function Yn() {
  return _n() || _n.set(Br(me.set)), me;
}
const pe = /* @__PURE__ */ X({});
function Qn(t) {
  let e = pe()[t];
  return e || (e = /* @__PURE__ */ X(void 0, {
    equals() {
      return !1;
    }
  }), Yn().sub((n) => {
    n && n[0] === t && e.set(n[1]);
  }), pe.set({ ...pe(), [t]: e })), e;
}
function v(t, e, n) {
  return Qn(t).sub(e, n);
}
const Pr = "ERR_METHOD_UNSUPPORTED", Tr = "ERR_RETRIEVE_LP_FAILED", kr = "ERR_METHOD_PARAMETER_UNSUPPORTED", Kn = "ERR_UNKNOWN_ENV", Or = "ERR_INVOKE_CUSTOM_METHOD_RESPONSE", Dr = /* @__PURE__ */ X("https://web.telegram.org");
function De(t, e) {
  Oe("Posting event:", e ? { eventType: t, eventData: e } : { eventType: t });
  const n = window;
  if (qn(n)) {
    n.TelegramWebviewProxy.postEvent(t, JSON.stringify(e));
    return;
  }
  const r = JSON.stringify({ eventType: t, eventData: e });
  if (mr())
    return n.parent.postMessage(r, Dr());
  const { external: o } = n;
  if (T({ notify: Un() })().isValid(o)) {
    o.notify(r);
    return;
  }
  throw new l(Kn);
}
function xe(t, e, n) {
  n || (n = {});
  const { capture: r } = n, [o, s] = Z();
  return new g((a) => {
    (Array.isArray(e) ? e : [e]).forEach((i) => {
      o(
        v(i, (p) => {
          (!r || (Array.isArray(e) ? r({
            event: i,
            payload: p
          }) : r(p))) && a(p);
        })
      );
    }), (n.postEvent || De)(t, n.params);
  }, n).finally(s);
}
function Me(t) {
  return dr()(t);
}
function Zn(t) {
  return Me(
    t.replace(/^[^?#]*[?#]/, "").replace(/[?#]/g, "&")
  );
}
function xr() {
  return Zn(window.location.href);
}
function Mr() {
  const t = performance.getEntriesByType("navigation")[0];
  if (!t)
    throw new Error("Unable to get first navigation entry.");
  return Zn(t.name);
}
const Vr = "launchParams";
function Ir() {
  return Me(B(Vr) || "");
}
function Xn(t) {
  R("launchParams", /* @__PURE__ */ _r(t));
}
function to(t) {
  return t instanceof Error ? t.message + (t.cause ? `
  ${to(t.cause)}` : "") : JSON.stringify(t);
}
function G() {
  const t = [];
  for (const e of [
    // Try to retrieve launch parameters from the current location. This method can return
    // nothing in case, location was changed, and then the page was reloaded.
    xr,
    // Then, try using the lower level API - window.performance.
    Mr,
    // Finally, try to extract launch parameters from the session storage.
    Ir
  ])
    try {
      const n = e();
      return Xn(n), n;
    } catch (n) {
      t.push(n);
    }
  throw new l(Tr, [
    "Unable to retrieve launch parameters from any known source. Perhaps, you have opened your app outside Telegram?",
    "📖 Refer to docs for more information:",
    "https://docs.telegram-mini-apps.com/packages/telegram-apps-sdk/environment",
    "Collected errors:",
    ...t.map((e) => `— ${to(e)}`)
  ].join(`
`));
}
function fn(t) {
  if (t === "simple")
    try {
      return G(), !0;
    } catch {
      return !1;
    }
  return g.withFn(async () => {
    if (qn(window))
      return !0;
    try {
      return await xe("web_app_request_theme", "theme_changed", { timeout: 100 }), !0;
    } catch {
      return !1;
    }
  }, t);
}
function be(t, e) {
  window.dispatchEvent(new MessageEvent("message", {
    data: JSON.stringify({ eventType: t, eventData: e }),
    // We specify window.parent to imitate the case, the parent iframe sent us this event.
    source: window.parent
  }));
}
function Nr(t, e) {
  if (typeof e == "string")
    try {
      const { eventType: n } = $n()(e);
      n === "web_app_request_theme" && be("theme_changed", {
        theme_params: JSON.parse(/* @__PURE__ */ jn(t))
      }), n === "web_app_request_viewport" && be("viewport_changed", {
        width: window.innerWidth,
        height: window.innerHeight,
        is_state_stable: !0,
        is_expanded: !0
      });
    } catch {
    }
}
function qi(t) {
  var e;
  const n = typeof t == "string" ? Me(t) : t;
  Xn(n);
  const r = (e = window.TelegramWebviewProxy) == null ? void 0 : e.postEvent;
  window.TelegramWebviewProxy = {
    postEvent(o, s) {
      Nr(n.themeParams, JSON.stringify({ eventType: o, eventData: s })), r == null || r(o, s);
    }
  }, Oe("Environment was mocked by the mockTelegramEnv function");
}
function Lr() {
  [
    ["TelegramGameProxy_receiveEvent"],
    // Windows Phone.
    ["TelegramGameProxy", "receiveEvent"],
    // Desktop.
    ["Telegram", "WebView", "receiveEvent"]
    // Android and iOS.
  ].forEach((t) => {
    let e = window;
    t.forEach((n, r, o) => {
      if (r === o.length - 1) {
        e[n] = be;
        return;
      }
      n in e || (e[n] = {}), e = e[n];
    });
  });
}
function jr() {
  ["TelegramGameProxy_receiveEvent", "TelegramGameProxy", "Telegram"].forEach((t) => {
    delete window[t];
  });
}
function F(t, e, n) {
  Qn(t).unsub(e, n);
}
function Hi(t, e) {
  return Yn().sub(t, e);
}
function Wi(t, e) {
  me.unsub(t, e);
}
function eo(t) {
  return ({ req_id: e }) => e === t;
}
function hn(t) {
  return t.split(".").map(Number);
}
function $r(t, e) {
  const n = hn(t), r = hn(e), o = Math.max(n.length, r.length);
  for (let s = 0; s < o; s += 1) {
    const a = n[s] || 0, i = r[s] || 0;
    if (a !== i)
      return a > i ? 1 : -1;
  }
  return 0;
}
function y(t, e) {
  return $r(t, e) <= 0;
}
function z(t, e, n) {
  if (typeof n == "string") {
    if (t === "web_app_open_link") {
      if (e === "try_instant_view")
        return y("6.4", n);
      if (e === "try_browser")
        return y("7.6", n);
    }
    if (t === "web_app_set_header_color" && e === "color")
      return y("6.9", n);
    if (t === "web_app_close" && e === "return_back")
      return y("7.6", n);
    if (t === "web_app_setup_main_button" && e === "has_shine_effect")
      return y("7.10", n);
  }
  switch (t) {
    case "web_app_open_tg_link":
    case "web_app_open_invoice":
    case "web_app_setup_back_button":
    case "web_app_set_background_color":
    case "web_app_set_header_color":
    case "web_app_trigger_haptic_feedback":
      return y("6.1", e);
    case "web_app_open_popup":
      return y("6.2", e);
    case "web_app_close_scan_qr_popup":
    case "web_app_open_scan_qr_popup":
    case "web_app_read_text_from_clipboard":
      return y("6.4", e);
    case "web_app_switch_inline_query":
      return y("6.7", e);
    case "web_app_invoke_custom_method":
    case "web_app_request_write_access":
    case "web_app_request_phone":
      return y("6.9", e);
    case "web_app_setup_settings_button":
      return y("6.10", e);
    case "web_app_biometry_get_info":
    case "web_app_biometry_open_settings":
    case "web_app_biometry_request_access":
    case "web_app_biometry_request_auth":
    case "web_app_biometry_update_token":
      return y("7.2", e);
    case "web_app_setup_swipe_behavior":
      return y("7.7", e);
    case "web_app_share_to_story":
      return y("7.8", e);
    case "web_app_setup_secondary_button":
    case "web_app_set_bottom_bar_color":
      return y("7.10", e);
    default:
      return [
        "iframe_ready",
        "iframe_will_reload",
        "web_app_close",
        "web_app_data_send",
        "web_app_expand",
        "web_app_open_link",
        "web_app_ready",
        "web_app_request_theme",
        "web_app_request_viewport",
        "web_app_setup_main_button",
        "web_app_setup_closing_behavior"
      ].includes(t);
  }
}
function Ur(t, e) {
  e || (e = "strict");
  const n = typeof e == "function" ? e : (r) => {
    const { method: o, version: s } = r;
    let a, i;
    if ("param" in r ? (a = `Parameter "${r.param}" of "${o}" method is unsupported in Mini Apps version ${s}`, i = kr) : (a = `Method "${o}" is unsupported in Mini Apps version ${s}`, i = Pr), e === "strict")
      throw new l(i, a);
    return console.warn(a);
  };
  return (r, o) => z(r, t) ? fr(o) && r === "web_app_set_header_color" && "color" in o && !z(r, "color", t) ? n({ version: t, method: r, param: "color" }) : De(r, o) : n({ version: t, method: r });
}
function qr(t, e, n, r) {
  return xe("web_app_invoke_custom_method", "custom_method_invoked", {
    ...r || {},
    params: { method: t, params: e, req_id: n },
    capture: eo(n)
  }).then(({ result: o, error: s }) => {
    if (s)
      throw new l(Or, s);
    return o;
  });
}
function Hr() {
  return performance.getEntriesByType("navigation")[0];
}
function D() {
  const t = Hr();
  return !!t && t.type === "reload";
}
let Y;
function Wr(t, e) {
  Y && Y.set(t, e) || e();
}
function zr(t) {
  if (Y)
    return t();
  Y = /* @__PURE__ */ new Map();
  try {
    t();
  } finally {
    Y.forEach((e) => e()), Y = void 0;
  }
}
// @__NO_SIDE_EFFECTS__
function u(t, e) {
  e || (e = {});
  const n = e.equals || Object.is;
  let r = [], o = t;
  const s = (c) => {
    if (!n(o, c)) {
      const _ = o;
      o = c, Wr(p, () => {
        [...r].forEach(([b, w]) => {
          b(c, _), w && i(b, !0);
        });
      });
    }
  };
  function a(c) {
    const _ = typeof c != "object" ? { once: c } : c;
    return {
      once: _.once || !1,
      signal: _.signal || !1
    };
  }
  const i = (c, _) => {
    const b = a(_), w = r.findIndex(([N, S]) => N === c && S.once === b.once && S.signal === b.signal);
    w >= 0 && r.splice(w, 1);
  }, p = Object.assign(
    function() {
      return Gr(p), o;
    },
    {
      destroy() {
        r = [];
      },
      set: s,
      reset() {
        s(t);
      },
      sub(c, _) {
        return r.push([c, a(_)]), () => i(c, _);
      },
      unsub: i,
      unsubAll() {
        r = r.filter((c) => c[1].signal);
      }
    }
  );
  return p;
}
const rt = [];
function Gr(t) {
  rt.length && rt[rt.length - 1].add(t);
}
// @__NO_SIDE_EFFECTS__
function h(t, e) {
  let n = /* @__PURE__ */ new Set(), r;
  function o() {
    return r || (r = /* @__PURE__ */ u(a(), e));
  }
  function s() {
    o().set(a());
  }
  function a() {
    n.forEach((c) => {
      c.unsub(s, { signal: !0 });
    });
    const i = /* @__PURE__ */ new Set();
    let p;
    rt.push(i);
    try {
      p = t();
    } finally {
      rt.pop();
    }
    return i.forEach((c) => {
      c.sub(s, { signal: !0 });
    }), n = i, p;
  }
  return Object.assign(function() {
    return o()();
  }, {
    destroy() {
      o().destroy();
    },
    sub(...i) {
      return o().sub(...i);
    },
    unsub(...i) {
      o().unsub(...i);
    },
    unsubAll(...i) {
      o().unsubAll(...i);
    }
  });
}
const Fr = /* @__PURE__ */ u(/* @__PURE__ */ (() => {
  let t = 0;
  return () => (t += 1).toString();
})()), no = /* @__PURE__ */ u(De), L = /* @__PURE__ */ u("0.0");
function Jr(t) {
  t || (t = {});
  const { postEvent: e } = t, n = t.version || G().version;
  L.set(n), no.set(
    typeof e == "function" ? e : Ur(n)
  );
}
function oo() {
  return Fr()();
}
function tt(t, e, n) {
  return qr(t, e, oo(), {
    ...n || {},
    postEvent: d
  });
}
const x = (t, e, n) => (n || (n = {}), n.postEvent || (n.postEvent = d), xe(t, e, n)), d = (t, e) => no()(t, e);
function M(t) {
  return /* @__PURE__ */ h(() => z(t, L()));
}
const nt = "ERR_POPUP_INVALID_PARAMS", Ve = "ERR_INVALID_URL", Yr = "ERR_INVALID_SLUG", Qr = "ERR_DATA_INVALID_SIZE", Kr = "ERR_ACCESS_DENIED", jt = "ERR_ALREADY_REQUESTING", Ie = "ERR_ALREADY_OPENED", Zr = "ERR_ALREADY_MOUNTING", Xr = "ERR_VARS_ALREADY_BOUND", ts = "ERR_NOT_AVAILABLE", es = "ERR_NOT_INITIALIZED", mn = "ERR_NOT_SUPPORTED", ns = "ERR_NOT_MOUNTED";
function bn() {
  return typeof window > "u";
}
// @__NO_SIDE_EFFECTS__
function V(t, e, { isSupported: n, isMounted: r, component: o, supports: s } = {}) {
  const a = `${o ? `${o}.` : ""}${t}()`;
  n = n ? Array.isArray(n) || typeof n == "object" && "any" in n ? n : [n] : void 0;
  function i(m) {
    if (s) {
      const f = s[m];
      return z(f[0], f[1], L());
    }
    return !0;
  }
  const p = () => {
    if (!n)
      return;
    const m = `it is unsupported in Mini Apps version ${L()}`;
    function f(C) {
      return typeof C == "string" ? z(C, L()) ? void 0 : m : C.fn() ? void 0 : C.error;
    }
    if (Array.isArray(n)) {
      for (const C of n) {
        const un = f(C);
        if (un)
          return un;
      }
      return;
    }
    let W;
    for (const C of n.any)
      if (W = f(C), !W)
        return;
    return m;
  }, c = (...m) => {
    if (s) {
      for (const f in s)
        if (s[f][2](...m) && !i(f))
          return `option ${f} is not supported in Mini Apps version ${L()}`;
    }
  }, _ = /* @__PURE__ */ h(() => !p()), b = /* @__PURE__ */ h(() => L() !== "0.0"), w = /* @__PURE__ */ h(() => !r || r()), N = /* @__PURE__ */ h(
    () => fn("simple") && !bn() && b() && _() && w()
  );
  let S;
  if (s) {
    S = {};
    for (const m in s)
      S[m] = /* @__PURE__ */ h(() => i(m));
  }
  return Object.assign(
    (...m) => {
      const f = `Unable to call the ${a} ${o ? "method" : "function"}:`;
      if (bn() || !fn("simple"))
        throw new l(
          Kn,
          `${f} it can't be called outside Mini Apps`
        );
      if (!b())
        throw new l(
          es,
          `${f} the SDK was not initialized. Use the SDK init() function`
        );
      const W = p();
      if (W)
        throw new l(mn, `${f} ${W}`);
      const C = c(...m);
      if (C)
        throw new l(mn, `${f} ${C}`);
      if (!w())
        throw new l(
          ns,
          `${f} the component is not mounted. Use the ${o}.mount() method`
        );
      return e(...m);
    },
    e,
    {
      isAvailable: N,
      ifAvailable(...m) {
        return N() ? e(...m) : void 0;
      }
    },
    n ? {
      isSupported: _
    } : {},
    S ? {
      supports: S
    } : {}
  );
}
function $t(t, e) {
  return e || (e = {}), (n, r, o, s) => /* @__PURE__ */ V(n, r, {
    ...e,
    isSupported: o || e.isSupported,
    supports: s,
    component: t
  });
}
function et(t, e, n) {
  return $t(t, { isSupported: n, isMounted: e });
}
function P(t, e) {
  return $t(t, { isSupported: e });
}
const Ut = "web_app_setup_back_button", ro = "back_button_pressed", qt = "backButton", ge = /* @__PURE__ */ u(!1), lt = /* @__PURE__ */ u(!1), os = M(Ut), so = et(qt, lt, Ut), Ne = P(qt, Ut), rs = so("hide", () => {
  Le(!1);
}), ss = Ne("mount", () => {
  lt() || (Le(D() && B(qt) || !1), lt.set(!0));
});
function Le(t) {
  t !== ge() && (d(Ut, { is_visible: t }), R(qt, t), ge.set(t));
}
const as = Ne(
  "onClick",
  (t) => v(ro, t)
), is = Ne(
  "offClick",
  (t) => {
    F(ro, t);
  }
), cs = so("show", () => {
  Le(!0);
});
function us() {
  lt.set(!1);
}
const zi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hide: rs,
  isMounted: lt,
  isSupported: os,
  isVisible: ge,
  mount: ss,
  offClick: is,
  onClick: as,
  show: cs,
  unmount: us
}, Symbol.toStringTag, { value: "Module" }));
// @__NO_SIDE_EFFECTS__
function ao(t, e, n, {
  isMounting: r,
  isMounted: o,
  mountError: s
}) {
  return (a) => g.withFn(async (i) => {
    if (o())
      return;
    if (r())
      throw new l(
        Zr,
        `The ${t} component is already mounting`
      );
    r.set(!0);
    let p;
    try {
      p = [!0, await e({ abortSignal: i })];
    } catch (c) {
      p = [!1, c];
    }
    zr(() => {
      if (r.set(!1), o.set(!0), p[0])
        n(p[1]);
      else {
        const c = p[1];
        throw s.set(c), c;
      }
    });
  }, a);
}
const U = $t, Ht = /* @__PURE__ */ u(), Rt = /* @__PURE__ */ u(!1), Bt = /* @__PURE__ */ u(!1), Wt = /* @__PURE__ */ u(!1), io = /* @__PURE__ */ u(!1), co = /* @__PURE__ */ u(void 0), ps = /* @__PURE__ */ h(() => {
  const t = Ht();
  return t && t.available;
});
function je(t) {
  return t.available ? {
    available: !0,
    tokenSaved: t.token_saved,
    deviceId: t.device_id,
    accessRequested: t.access_requested,
    type: t.type,
    accessGranted: t.access_granted
  } : {
    available: !1
  };
}
const gn = "web_app_biometry_get_info", ls = /* @__PURE__ */ V(
  "requestBiometry",
  (t) => x(gn, "biometry_info_received", t).then(je),
  {
    isSupported: gn
  }
), zt = "web_app_biometry_request_auth", ds = "web_app_biometry_request_access", _s = "web_app_biometry_open_settings", fs = "web_app_biometry_update_token", $e = "biometry_info_received", K = "biometry", hs = M(zt), ms = U(K), bs = P(K, zt), Ue = et(K, Wt, zt);
function uo() {
  throw new l(ts, "Biometry is not available");
}
const gs = Ue(
  "authenticate",
  (t) => g.withFn(async (e) => {
    if (Rt())
      throw new l(jt, "Authentication is already in progress");
    const n = Ht();
    (!n || !n.available) && uo(), Rt.set(!0);
    try {
      const r = await x(
        zt,
        "biometry_auth_requested",
        {
          abortSignal: e,
          params: {
            reason: ((t || {}).reason || "").trim()
          }
        }
      ), { token: o } = r;
      return typeof o == "string" && Gt({ ...n, token: o }), r;
    } finally {
      Rt.set(!1);
    }
  }, t)
), ws = bs("openSettings", () => {
  d(_s);
}), ys = Ue(
  "requestAccess",
  (t) => g.withFn(async (e) => {
    if (Bt())
      throw new l(jt, "Access request is already in progress");
    Bt.set(!0);
    try {
      const n = await x(ds, $e, {
        abortSignal: e,
        params: { reason: (t || {}).reason || "" }
      }).then(je);
      return n.available || uo(), Gt(n), n.accessGranted;
    } finally {
      Bt.set(!1);
    }
  }, t)
), Es = ms(
  "mount",
  /* @__PURE__ */ ao(
    K,
    (t) => D() && B(K) || ls(t),
    (t) => {
      v($e, po), Gt(t);
    },
    { isMounted: Wt, mountError: co, isMounting: io }
  )
), po = (t) => {
  Gt(je(t));
};
function Gt(t) {
  Ht.set(t), R(K, t);
}
function Ss() {
  F($e, po), Wt.set(!1);
}
const vs = Ue(
  "updateToken",
  (t) => (t || (t = {}), x(fs, "biometry_token_updated", {
    ...t,
    params: {
      token: t.token || "",
      reason: t.reason
    }
  }).then((e) => e.status))
), Gi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  authenticate: gs,
  isAuthenticating: Rt,
  isAvailable: ps,
  isMounted: Wt,
  isMounting: io,
  isRequestingAccess: Bt,
  isSupported: hs,
  mount: Es,
  mountError: co,
  openSettings: ws,
  requestAccess: ys,
  state: Ht,
  unmount: Ss,
  updateToken: vs
}, Symbol.toStringTag, { value: "Module" }));
function Ft(t, e) {
  return $t(t, { isMounted: e });
}
const Jt = "closingBehavior", we = /* @__PURE__ */ u(!1), dt = /* @__PURE__ */ u(!1), lo = Ft(Jt, dt), Cs = U(Jt), As = lo("disableConfirmation", () => {
  qe(!1);
}), Rs = lo("enableConfirmation", () => {
  qe(!0);
}), Bs = Cs("mount", () => {
  dt() || (qe(
    D() && B(Jt) || !1
  ), dt.set(!0));
});
function qe(t) {
  t !== we() && (d("web_app_setup_closing_behavior", { need_confirmation: t }), R(Jt, t), we.set(t));
}
function Ps() {
  dt.set(!1);
}
const Fi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  disableConfirmation: As,
  enableConfirmation: Rs,
  isConfirmationEnabled: we,
  isMounted: dt,
  mount: Bs,
  unmount: Ps
}, Symbol.toStringTag, { value: "Module" })), _o = "web_app_invoke_custom_method", Yt = P("cloudStorage", _o), Ts = M(_o), ks = Yt("deleteItem", (t, e) => {
  const n = Array.isArray(t) ? t : [t];
  return n.length ? tt("deleteStorageValues", { keys: n }, e).then() : g.resolve();
});
function Os(t, e) {
  const n = Array.isArray(t) ? t : [t];
  return n.length ? tt("getStorageValues", { keys: n }, e).then((r) => {
    const o = Mt(
      Object.fromEntries(n.map((s) => [s, j()]))
    )()(r);
    return Array.isArray(t) ? o : o[t];
  }) : g.resolve(typeof t == "string" ? "" : {});
}
const Ds = Yt("getItem", Os), xs = Yt("getKeys", (t) => tt("getStorageKeys", {}, t).then(tr(j())())), Ms = Yt("setItem", (t, e, n) => tt("saveStorageValue", {
  key: t,
  value: e
}, n).then()), Ji = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  deleteItem: ks,
  getItem: Ds,
  getKeys: xs,
  isSupported: Ts,
  setItem: Ms
}, Symbol.toStringTag, { value: "Module" })), Ct = "web_app_trigger_haptic_feedback", He = P("hapticFeedback", Ct), Vs = M(Ct), Is = He(
  "impactOccurred",
  (t) => {
    d(Ct, {
      type: "impact",
      impact_style: t
    });
  }
), Ns = He(
  "notificationOccurred",
  (t) => {
    d(Ct, {
      type: "notification",
      notification_type: t
    });
  }
), Ls = He(
  "selectionChanged",
  () => {
    d(Ct, { type: "selection_change" });
  }
), Yi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  impactOccurred: Is,
  isSupported: Vs,
  notificationOccurred: Ns,
  selectionChanged: Ls
}, Symbol.toStringTag, { value: "Module" })), We = /* @__PURE__ */ u(void 0);
function I(t) {
  return /* @__PURE__ */ h(() => {
    const e = We();
    return e ? e[t] : void 0;
  });
}
const fo = I("authDate"), ho = I("canSendAfter"), js = /* @__PURE__ */ h(() => {
  const t = fo(), e = ho();
  return e && t ? new Date(t.getTime() + e * 1e3) : void 0;
}), $s = I("chat"), Us = I("chatType"), qs = I("chatInstance"), Hs = I("hash"), Ws = I("queryId"), mo = /* @__PURE__ */ u(), zs = I("receiver");
function Gs() {
  const t = G();
  We.set(t.initData), mo.set(t.initDataRaw);
}
const Fs = I("startParam"), Js = I("user"), Qi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  authDate: fo,
  canSendAfter: ho,
  canSendAfterDate: js,
  chat: $s,
  chatInstance: qs,
  chatType: Us,
  hash: Hs,
  queryId: Ws,
  raw: mo,
  receiver: zs,
  restore: Gs,
  startParam: Fs,
  state: We,
  user: Js
}, Symbol.toStringTag, { value: "Module" }));
function Ki(t) {
  return Yo()(t);
}
const ze = "web_app_open_invoice", Ys = P("invoice", ze), Pt = /* @__PURE__ */ u(!1), Qs = M(ze);
async function bo(t, e, n) {
  if (Pt())
    throw new l(Ie, "An invoice is already opened");
  let r;
  if (e === "url") {
    const { hostname: o, pathname: s } = new URL(t, window.location.href);
    if (o !== "t.me")
      throw new l(Ve, `Link has unexpected hostname: ${o}`);
    const a = s.match(/^\/(\$|invoice\/)([A-Za-z0-9\-_=]+)$/);
    if (!a)
      throw new l(
        Yr,
        'Expected to receive a link with a pathname in format "/invoice/{slug}" or "/${slug}"'
      );
    [, , r] = a;
  } else
    r = t, n = e;
  return Pt.set(!0), x(ze, "invoice_closed", {
    ...n,
    params: { slug: r },
    capture: (o) => r === o.slug
  }).then((o) => o.status).finally(() => {
    Pt.set(!1);
  });
}
const Ks = Ys("open", bo), Zi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  _open: bo,
  isOpened: Pt,
  isSupported: Qs,
  open: Ks
}, Symbol.toStringTag, { value: "Module" }));
function go(t) {
  const e = On(t);
  return Math.sqrt(
    [0.299, 0.587, 0.114].reduce((n, r, o) => {
      const s = parseInt(e.slice(1 + o * 2, 1 + (o + 1) * 2), 16);
      return n + s * s * r;
    }, 0)
  ) < 120;
}
const _t = /* @__PURE__ */ u(!1), Tt = /* @__PURE__ */ u(!1), q = /* @__PURE__ */ u({});
function E(t) {
  return /* @__PURE__ */ h(() => q()[t]);
}
const Zs = E("accentTextColor"), Ge = E("bgColor"), Fe = E("buttonColor"), wo = E("buttonTextColor"), yo = E("bottomBarBgColor"), Xs = E("destructiveTextColor"), ta = E("headerBgColor"), ea = E("hintColor"), na = /* @__PURE__ */ h(() => {
  const { bgColor: t } = q();
  return !t || go(t);
}), oa = E("linkColor"), Nt = E("secondaryBgColor"), ra = E("sectionBgColor"), sa = E("sectionHeaderTextColor"), aa = E("sectionSeparatorColor"), ia = E("subtitleTextColor"), ca = E("textColor");
function J(t) {
  return /* @__PURE__ */ h(() => Je()[t]);
}
const st = /* @__PURE__ */ u({
  hasShineEffect: !1,
  isEnabled: !0,
  isLoaderVisible: !1,
  isVisible: !1,
  text: "Continue"
}), Je = /* @__PURE__ */ h(() => {
  const t = st();
  return {
    ...t,
    backgroundColor: t.backgroundColor || Fe() || "#2481cc",
    textColor: t.textColor || wo() || "#ffffff"
  };
}), ft = /* @__PURE__ */ u(!1), ua = J("backgroundColor"), pa = J("hasShineEffect"), la = J("isEnabled"), da = J("isLoaderVisible"), _a = J("isVisible"), fa = J("text"), ha = J("textColor"), ma = "web_app_setup_main_button", Eo = "main_button_pressed", Qt = "mainButton", Ye = U(Qt), ba = Ft(Qt, ft), ga = Ye("mount", () => {
  if (!ft()) {
    const t = D() && B(Qt);
    t && st.set(t), ft.set(!0);
  }
}), wa = Ye(
  "onClick",
  (t) => v(Eo, t)
), ya = Ye(
  "offClick",
  (t) => {
    F(Eo, t);
  }
), Ea = ba(
  "setParams",
  (t) => {
    st.set({
      ...st(),
      ...Object.fromEntries(
        Object.entries(t).filter(([, n]) => n !== void 0)
      )
    }), R(Qt, st());
    const e = Je();
    e.text && d(ma, {
      color: e.backgroundColor,
      has_shine_effect: e.hasShineEffect,
      is_active: e.isEnabled,
      is_progress_visible: e.isLoaderVisible,
      is_visible: e.isVisible,
      text: e.text,
      text_color: e.textColor
    });
  }
);
function Sa() {
  ft.set(!1);
}
const Xi = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: ua,
  hasShineEffect: pa,
  isEnabled: la,
  isLoaderVisible: da,
  isMounted: ft,
  isVisible: _a,
  mount: ga,
  offClick: ya,
  onClick: wa,
  setParams: Ea,
  state: Je,
  text: fa,
  textColor: ha,
  unmount: Sa
}, Symbol.toStringTag, { value: "Module" }));
function Qe() {
  throw new l(
    Xr,
    "CSS variables are already bound"
  );
}
function va(t) {
  return Zo()(t);
}
const Kt = "themeParams", So = "theme_changed", Ca = U(Kt), Aa = Ft(Kt, _t), Ra = Aa(
  "bindCssVars",
  (t) => {
    Tt() && Qe(), t || (t = (r) => `--tg-theme-${Pe(r)}`);
    function e(r) {
      Object.entries(q()).forEach(([o, s]) => {
        s && r(o, s);
      });
    }
    function n() {
      e((r, o) => {
        Te(t(r), o);
      });
    }
    return n(), q.sub(n), Tt.set(!0), () => {
      e(ke), q.unsub(n), Tt.set(!1);
    };
  }
), vo = Ca("mount", () => {
  _t() || (v(So, Co), q.set(
    D() && B(Kt) || G().themeParams
  ), _t.set(!0));
}), Co = (t) => {
  const e = va(t.theme_params);
  q.set(e), R(Kt, e);
};
function Ba() {
  F(So, Co), _t.set(!1);
}
// @__NO_SIDE_EFFECTS__
function Ao(t) {
  return /* @__PURE__ */ h(() => {
    const e = t();
    return ct(e) ? e : e === "bg_color" ? Ge() : Nt();
  });
}
const ht = /* @__PURE__ */ u("bg_color"), Ke = /* @__PURE__ */ Ao(ht), mt = /* @__PURE__ */ u("bottom_bar_bg_color"), Ze = /* @__PURE__ */ h(() => {
  const t = mt();
  return ct(t) ? t : t === "bottom_bar_bg_color" ? yo() || Nt() : t === "secondary_bg_color" ? Nt() : Ge();
}), bt = /* @__PURE__ */ u("bg_color"), Ro = /* @__PURE__ */ Ao(bt), gt = /* @__PURE__ */ u(!1), kt = /* @__PURE__ */ u(!1), Pa = /* @__PURE__ */ h(() => {
  const t = Ke();
  return t ? go(t) : !1;
}), Bo = /* @__PURE__ */ h(() => ({
  backgroundColor: ht(),
  bottomBarColor: mt(),
  headerColor: bt()
})), ye = "web_app_set_background_color", Ee = "web_app_set_bottom_bar_color", Ot = "web_app_set_header_color", At = "miniApp", Xe = {
  any: [
    ye,
    Ee,
    Ot
  ]
}, Ta = /* @__PURE__ */ h(() => Xe.any.some((t) => z(t, L()))), Po = U(At), ka = P(At, Xe), Zt = et(At, gt, Xe), Oa = Zt(
  "bindCssVars",
  (t) => {
    kt() && Qe();
    const [e, n] = Z();
    function r(o, s) {
      function a() {
        Te(o, s() || null);
      }
      a(), e(s.sub(a), ke.bind(null, o));
    }
    return t || (t = (o) => `--tg-${Pe(o)}`), r(t("bgColor"), Ke), r(t("bottomBarColor"), Ze), r(t("headerColor"), Ro), e(() => {
      kt.set(!1);
    }), kt.set(!0), n;
  }
), Da = Po("close", (t) => {
  d("web_app_close", { return_back: t });
}), xa = ka(
  "mount",
  () => {
    if (!gt()) {
      const t = D() && B(At);
      vo(), To.ifAvailable(t ? t.backgroundColor : "bg_color"), ko.ifAvailable(t ? t.bottomBarColor : "bottom_bar_bg_color"), Oo.ifAvailable(t ? t.headerColor : "bg_color"), gt.set(!0);
    }
  }
), Ma = Po("ready", () => {
  d("web_app_ready");
});
function tn() {
  R(At, Bo());
}
const To = Zt(
  "setBackgroundColor",
  (t) => {
    t !== ht() && (d(ye, { color: t }), ht.set(t), tn());
  },
  ye
), ko = Zt(
  "setBottomBarColor",
  (t) => {
    t !== mt() && (d(Ee, { color: t }), mt.set(t), tn());
  },
  Ee
), Oo = Zt(
  "setHeaderColor",
  (t) => {
    t !== bt() && (d(Ot, ct(t) ? { color: t } : { color_key: t }), bt.set(t), tn());
  },
  Ot,
  {
    rgb: [Ot, "color", ct]
  }
);
function Va() {
  gt.set(!1);
}
const tc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: ht,
  backgroundColorRGB: Ke,
  bindCssVars: Oa,
  bottomBarColor: mt,
  bottomBarColorRGB: Ze,
  close: Da,
  headerColor: bt,
  headerColorRGB: Ro,
  isCssVarsBound: kt,
  isDark: Pa,
  isMounted: gt,
  isSupported: Ta,
  mount: xa,
  ready: Ma,
  setBackgroundColor: To,
  setBottomBarColor: ko,
  setHeaderColor: Oo,
  state: Bo,
  unmount: Va
}, Symbol.toStringTag, { value: "Module" }));
function Ia(t) {
  const e = t.message.trim(), n = (t.title || "").trim(), r = t.buttons || [];
  if (n.length > 64)
    throw new l(nt, `Invalid title: ${n}`);
  if (!e || e.length > 256)
    throw new l(nt, `Invalid message: ${e}`);
  if (r.length > 3)
    throw new l(nt, `Invalid buttons count: ${r.length}`);
  return {
    title: n,
    message: e,
    buttons: r.length ? r.map((o, s) => {
      const a = o.id || "";
      if (a.length > 64)
        throw new l(nt, `Button with index ${s} has invalid id: ${a}`);
      if (!o.type || o.type === "default" || o.type === "destructive") {
        const i = o.text.trim();
        if (!i || i.length > 64)
          throw new l(nt, `Button with index ${s} has invalid text: ${i}`);
        return { type: o.type, text: i, id: a };
      }
      return { type: o.type, id: a };
    }) : [{ type: "close", id: "" }]
  };
}
const en = "web_app_open_popup", Na = P("popup", en), Dt = /* @__PURE__ */ u(!1), La = M(en), ja = Na(
  "open",
  async (t) => {
    if (Dt())
      throw new l(Ie, "A popup is already opened");
    Dt.set(!0);
    try {
      const { button_id: e = null } = await x(en, "popup_closed", {
        ...t,
        params: Ia(t)
      });
      return e;
    } finally {
      Dt.set(!1);
    }
  }
), ec = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  isOpened: Dt,
  isSupported: La,
  open: ja
}, Symbol.toStringTag, { value: "Module" })), $a = "web_app_close_scan_qr_popup", nn = "web_app_open_scan_qr_popup", Ua = "scan_qr_popup_closed", qa = "qr_text_received", Do = P("qrScanner", nn), Se = Do("close", () => {
  Q.set(!1), d($a);
}), Q = /* @__PURE__ */ u(!1), Ha = M(nn);
function Wa(t) {
  return g.withFn((e) => {
    if (Q())
      throw new l(Ie, "The QR Scanner is already opened");
    Q.set(!0), t || (t = {});
    const { onCaptured: n, text: r, capture: o } = t, [, s] = Z(
      // Whenever the scanner was closed for some reason (by a developer or a
      // user), we should resolve the promise with undefined.
      Q.sub(() => {
        a.resolve();
      }),
      // Whenever user closed the scanner, update the isOpened signal state.
      v(Ua, () => {
        Q.set(!1);
      }),
      // Whenever some QR was scanned, we should check if it must be captured.
      v(qa, (i) => {
        n ? n(i.data) : (!o || o(i.data)) && (a.resolve(i.data), Se());
      })
    ), a = new ot({ abortSignal: e }).catch(Se).finally(s);
    return (t.postEvent || d)(nn, { text: r }), a;
  }, t);
}
const za = Do("open", Wa), nc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  close: Se,
  isOpened: Q,
  isSupported: Ha,
  open: za
}, Symbol.toStringTag, { value: "Module" }));
function H(t) {
  return /* @__PURE__ */ h(() => on()[t]);
}
const at = /* @__PURE__ */ u({
  hasShineEffect: !1,
  isEnabled: !0,
  isLoaderVisible: !1,
  isVisible: !1,
  position: "left",
  text: "Cancel"
}), on = /* @__PURE__ */ h(() => {
  const t = at();
  return {
    ...t,
    backgroundColor: t.backgroundColor || Ze() || "#000000",
    textColor: t.textColor || Fe() || "#2481cc"
  };
}), wt = /* @__PURE__ */ u(!1), Ga = H("backgroundColor"), Fa = H("hasShineEffect"), Ja = H("isEnabled"), Ya = H("isLoaderVisible"), Qa = H("isVisible"), Ka = H("position"), Za = H("text"), Xa = H("textColor"), Xt = "web_app_setup_secondary_button", xo = "secondary_button_pressed", te = "secondaryButton", rn = P(te, Xt), ti = et(te, wt, Xt), ei = M(Xt), ni = rn("mount", () => {
  if (!wt()) {
    const t = D() && B(te);
    t && at.set(t), wt.set(!0);
  }
}), oi = rn(
  "onClick",
  (t) => v(xo, t)
), ri = rn(
  "offClick",
  (t) => {
    F(xo, t);
  }
), si = ti(
  "setParams",
  (t) => {
    at.set({
      ...at(),
      ...Object.fromEntries(
        Object.entries(t).filter(([, n]) => n !== void 0)
      )
    }), R(te, at());
    const e = on();
    e.text && d(Xt, {
      color: e.backgroundColor,
      has_shine_effect: e.hasShineEffect,
      is_active: e.isEnabled,
      is_progress_visible: e.isLoaderVisible,
      is_visible: e.isVisible,
      position: e.position,
      text: e.text,
      text_color: e.textColor
    });
  }
);
function ai() {
  wt.set(!1);
}
const oc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  backgroundColor: Ga,
  hasShineEffect: Fa,
  isEnabled: Ja,
  isLoaderVisible: Ya,
  isMounted: wt,
  isSupported: ei,
  isVisible: Qa,
  mount: ni,
  offClick: ri,
  onClick: oi,
  position: Ka,
  setParams: si,
  state: on,
  text: Za,
  textColor: Xa,
  unmount: ai
}, Symbol.toStringTag, { value: "Module" })), ee = "web_app_setup_settings_button", Mo = "settings_button_pressed", ne = "settingsButton", ve = /* @__PURE__ */ u(!1), yt = /* @__PURE__ */ u(!1), ii = M(ee), sn = P(ne, ee), Vo = et(ne, yt, ee), ci = Vo("hide", () => {
  an(!1);
}), ui = sn("mount", () => {
  yt() || (an(D() && B(ne) || !1), yt.set(!0));
});
function an(t) {
  t !== ve() && (d(ee, { is_visible: t }), R(ne, t), ve.set(t));
}
const pi = sn(
  "onClick",
  (t) => v(Mo, t)
), li = sn(
  "offClick",
  (t) => {
    F(Mo, t);
  }
), di = Vo("show", () => {
  an(!0);
});
function _i() {
  yt.set(!1);
}
const rc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  hide: ci,
  isMounted: yt,
  isSupported: ii,
  isVisible: ve,
  mount: ui,
  offClick: li,
  onClick: pi,
  show: di,
  unmount: _i
}, Symbol.toStringTag, { value: "Module" })), oe = "web_app_setup_swipe_behavior", re = "swipeBehavior", Et = /* @__PURE__ */ u(!1), fi = M(oe), Ce = /* @__PURE__ */ u(!0), hi = P(re, oe), Io = et(re, Et, oe), mi = Io("disableVertical", () => {
  cn(!1);
}), bi = Io("enableVertical", () => {
  cn(!0);
}), gi = hi("mount", () => {
  Et() || (cn(
    D() && B(re) || !1,
    !0
  ), Et.set(!0));
});
function cn(t, e) {
  (t !== Ce() || e) && (d(oe, { allow_vertical_swipe: t }), R(re, t), Ce.set(t));
}
function wi() {
  Et.set(!1);
}
const sc = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  disableVertical: mi,
  enableVertical: bi,
  isMounted: Et,
  isSupported: fi,
  isVerticalEnabled: Ce,
  mount: gi,
  unmount: wi
}, Symbol.toStringTag, { value: "Module" })), ac = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  accentTextColor: Zs,
  backgroundColor: Ge,
  bindCssVars: Ra,
  bottomBarBgColor: yo,
  buttonColor: Fe,
  buttonTextColor: wo,
  destructiveTextColor: Xs,
  headerBackgroundColor: ta,
  hintColor: ea,
  isCssVarsBound: Tt,
  isDark: na,
  isMounted: _t,
  linkColor: oa,
  mount: vo,
  secondaryBackgroundColor: Nt,
  sectionBackgroundColor: ra,
  sectionHeaderTextColor: sa,
  sectionSeparatorColor: aa,
  state: q,
  subtitleTextColor: ia,
  textColor: ca,
  unmount: Ba
}, Symbol.toStringTag, { value: "Module" })), k = /* @__PURE__ */ u({
  height: 0,
  width: 0,
  isExpanded: !1,
  stableHeight: 0
}), se = /* @__PURE__ */ u(!1), xt = /* @__PURE__ */ u(!1), No = /* @__PURE__ */ u(!1), Lo = /* @__PURE__ */ u(void 0);
function ae(t) {
  return /* @__PURE__ */ h(() => k()[t]);
}
const yi = ae("height"), Ei = ae("isExpanded"), Si = /* @__PURE__ */ h(() => {
  const t = k();
  return t.height === t.stableHeight;
}), vi = ae("stableHeight"), Ci = ae("width");
function Ai(t) {
  return x("web_app_request_viewport", "viewport_changed", t).then((e) => ({
    height: e.height,
    width: e.width,
    isExpanded: e.is_expanded,
    isStable: e.is_state_stable
  }));
}
const Lt = "viewport", jo = U(Lt), Ri = Ft(Lt, se), Bi = Ri(
  "bindCssVars",
  (t) => {
    xt() && Qe(), t || (t = (r) => `--tg-viewport-${Pe(r)}`);
    const e = ["height", "width", "stableHeight"];
    function n() {
      e.forEach((r) => {
        Te(t(r), `${k()[r]}px`);
      });
    }
    return n(), k.sub(n), xt.set(!0), () => {
      e.forEach(ke), k.unsub(n), xt.set(!1);
    };
  }
), Pi = jo("expand", () => {
  d("web_app_expand");
}), Ti = jo(
  "mount",
  /* @__PURE__ */ ao(
    Lt,
    (t) => {
      const e = D() && B(Lt);
      if (e)
        return e;
      if ([
        "macos",
        "tdesktop",
        "unigram",
        "webk",
        "weba",
        "web"
      ].includes(G().platform)) {
        const n = window;
        return {
          isExpanded: !0,
          height: n.innerHeight,
          width: n.innerWidth,
          stableHeight: n.innerHeight
        };
      }
      return t.timeout || (t.timeout = 1e3), Ai(t).then((n) => ({
        height: n.height,
        isExpanded: n.isExpanded,
        stableHeight: n.isStable ? n.height : k().stableHeight,
        width: n.width
      }));
    },
    (t) => {
      v("viewport_changed", $o), Uo(t);
    },
    { isMounted: se, isMounting: No, mountError: Lo }
  )
), $o = (t) => {
  Uo({
    height: t.height,
    isExpanded: t.is_expanded,
    stableHeight: t.is_state_stable ? t.height : k().stableHeight,
    width: t.width
  });
};
function Uo(t) {
  k.set({
    isExpanded: t.isExpanded,
    height: le(t.height),
    width: le(t.width),
    stableHeight: le(t.stableHeight)
  }), R("viewport", k());
}
function le(t) {
  return Math.max(t, 0);
}
function ki() {
  F("viewport_changed", $o), se.set(!1);
}
const ic = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  bindCssVars: Bi,
  expand: Pi,
  height: yi,
  isCssVarsBound: xt,
  isExpanded: Ei,
  isMounted: se,
  isMounting: No,
  isStable: Si,
  mount: Ti,
  mountError: Lo,
  stableHeight: vi,
  state: k,
  unmount: ki,
  width: Ci
}, Symbol.toStringTag, { value: "Module" })), Oi = U(), cc = Oi(
  "openLink",
  (t, e) => {
    if (typeof t == "string")
      try {
        t = new URL(t);
      } catch (n) {
        throw new l(Ve, `"${t.toString()}" is invalid URL`, n);
      }
    e || (e = {}), d("web_app_open_link", {
      url: t.toString(),
      try_browser: e.tryBrowser,
      try_instant_view: e.tryInstantView
    });
  }
), wn = "web_app_open_tg_link", Di = U(), xi = Di(
  "openTelegramLink",
  (t) => {
    const e = t.toString();
    if (!e.match(/^https:\/\/t.me\/.+/))
      throw new l(Ve, `"${e}" is invalid URL`);
    if (!z(wn, L())) {
      window.location.href = e;
      return;
    }
    t = new URL(t), d(wn, { path_full: t.pathname + t.search });
  }
), Mi = U(), uc = Mi(
  "shareURL",
  (t, e) => {
    xi(
      "https://t.me/share/url?" + new URLSearchParams({ url: t, text: e || "" }).toString().replace(/\+/g, "%20")
    );
  }
), Ae = "web_app_request_phone", de = /* @__PURE__ */ u(!1), Vi = /* @__PURE__ */ V(
  "requestPhoneAccess",
  (t) => {
    if (de())
      throw new l(jt, "Phone access request is currently in progress");
    return de.set(!0), x(Ae, "phone_requested", t).then((e) => e.status).finally(() => {
      de.set(!1);
    });
  },
  {
    isSupported: Ae
  }
);
function yn(t) {
  return t || (t = {}), tt("getRequestedContact", {}, {
    ...t,
    timeout: t.timeout || 5e3
  }).then(
    kn({
      contact: Mt({
        userId: ["user_id", Vt()],
        phoneNumber: ["phone_number", j()],
        firstName: ["first_name", j()],
        lastName: ["last_name", j(!0)]
      })(),
      authDate: ["auth_date", Re()],
      hash: j()
    })()
  );
}
const pc = /* @__PURE__ */ V(
  "requestContact",
  (t) => new g(
    async (e, n, r) => {
      const o = { abortSignal: r };
      try {
        return e(await yn(o));
      } catch {
      }
      if (await Vi(o) !== "sent")
        throw new l(Kr, "User denied access");
      let s = 50;
      for (; !r.aborted; ) {
        try {
          return e(await yn(o));
        } catch {
        }
        await yr(s), s += 50;
      }
    },
    t
  ),
  {
    isSupported: Ae
  }
), En = "web_app_request_write_access", _e = /* @__PURE__ */ u(!1), lc = /* @__PURE__ */ V(
  "requestWriteAccess",
  (t) => {
    if (_e())
      throw new l(jt, "Write access request is currently in progress");
    return _e.set(!0), x(En, "write_access_requested", t).then((e) => e.status).finally(() => {
      _e.set(!1);
    });
  },
  {
    isSupported: En
  }
), dc = /* @__PURE__ */ V(
  "getCurrentTime",
  (t) => tt("getCurrentTime", {}, t).then(Re()),
  {
    isSupported: "web_app_invoke_custom_method"
  }
), Sn = "web_app_read_text_from_clipboard", _c = /* @__PURE__ */ V(
  "readTextFromClipboard",
  (t) => {
    const e = oo();
    return x(Sn, "clipboard_text_received", {
      ...t,
      params: { req_id: e },
      capture: eo(e)
    }).then(({ data: n = null }) => n);
  },
  {
    isSupported: Sn
  }
), fc = /* @__PURE__ */ V(
  "sendData",
  (t) => {
    const { size: e } = new Blob([t]);
    if (!e || e > 4096)
      throw new l(Qr, e ? "Maximum size of data to send is 4096 bytes" : "Attempted to send empty data");
    d("web_app_data_send", { data: t });
  }
), vn = "web_app_share_to_story", hc = /* @__PURE__ */ V(
  "shareStory",
  (t, e) => {
    e || (e = {}), d(vn, {
      text: e.text,
      media_url: t,
      widget_link: e.widgetLink
    });
  },
  { isSupported: vn }
), Cn = "web_app_switch_inline_query", mc = /* @__PURE__ */ V(
  "switchInlineQuery",
  (t, e) => {
    d(Cn, {
      query: t,
      chat_types: e || []
    });
  },
  {
    isSupported: [Cn, {
      fn: () => !!G().botInline,
      error: "Mini App should be ran in Bot inline mode"
    }]
  }
);
function bc(t) {
  try {
    return { result: t() };
  } catch (e) {
    return { error: e };
  }
}
function gc(t) {
  Jr(t), Lr();
  const [e, n] = Z(
    v("reload_iframe", () => {
      d("iframe_will_reload"), window.location.reload();
    }),
    jr
  ), { acceptCustomStyles: r = !0 } = t || {};
  if (r) {
    const o = document.createElement("style");
    o.id = "telegram-custom-styles", document.head.appendChild(o), e(
      v("set_custom_style", (s) => {
        o.innerHTML = s;
      }),
      () => {
        document.head.removeChild(o);
      }
    );
  }
  return d("iframe_ready", { reload_supported: !0 }), n;
}
function wc() {
  return qo(G, []);
}
function yc(t) {
  return Ho((e) => t.sub(e), t);
}
export {
  Fr as $createRequestId,
  Cr as $debug,
  no as $postEvent,
  Dr as $targetOrigin,
  L as $version,
  g as CancelablePromise,
  zn as ERR_ABORTED,
  Kr as ERR_ACCESS_DENIED,
  Zr as ERR_ALREADY_MOUNTING,
  Ie as ERR_ALREADY_OPENED,
  jt as ERR_ALREADY_REQUESTING,
  Gn as ERR_CANCELED,
  Xr as ERR_CSS_VARS_ALREADY_BOUND,
  Or as ERR_CUSTOM_METHOD_ERR_RESPONSE,
  Qr as ERR_DATA_INVALID_SIZE,
  Yr as ERR_INVALID_SLUG,
  Ve as ERR_INVALID_URL,
  zo as ERR_INVALID_VALUE,
  kr as ERR_METHOD_PARAMETER_UNSUPPORTED,
  Pr as ERR_METHOD_UNSUPPORTED,
  ts as ERR_NOT_AVAILABLE,
  es as ERR_NOT_INITIALIZED,
  ns as ERR_NOT_MOUNTED,
  mn as ERR_NOT_SUPPORTED,
  Bn as ERR_PARSE,
  nt as ERR_POPUP_INVALID_PARAMS,
  Tr as ERR_RETRIEVE_LP_FAILED,
  Fn as ERR_TIMED_OUT,
  Fo as ERR_UNEXPECTED_TYPE,
  Go as ERR_UNEXPECTED_VALUE,
  Kn as ERR_UNKNOWN_ENV,
  l as TypedError,
  he as addEventListener,
  gs as authenticateBiometry,
  zi as backButton,
  Oa as bindMiniAppCssVars,
  Ra as bindThemeParamsCssVars,
  Bi as bindViewportCssVars,
  Gi as biometry,
  co as biometryMountError,
  Ht as biometryState,
  fe as classNames,
  Da as closeMiniApp,
  Se as closeQrScanner,
  Fi as closingBehavior,
  Ji as cloudStorage,
  $r as compareVersions,
  Ur as createPostEvent,
  Lr as defineEventHandlers,
  ks as deleteCloudStorageItem,
  ke as deleteCssVar,
  As as disableClosingConfirmation,
  mi as disableVerticalSwipes,
  be as emitMiniAppsEvent,
  Rs as enableClosingConfirmation,
  bi as enableVerticalSwipes,
  Pi as expandViewport,
  Ds as getCloudStorageItem,
  xs as getCloudStorageKeys,
  dc as getCurrentTime,
  Yi as hapticFeedback,
  Is as hapticFeedbackImpactOccurred,
  Ns as hapticFeedbackNotificationOccurred,
  Ls as hapticFeedbackSelectionChanged,
  rs as hideBackButton,
  ci as hideSettingsButton,
  gc as init,
  Qi as initData,
  fo as initDataAuthDate,
  ho as initDataCanSendAfter,
  js as initDataCanSendAfterDate,
  $s as initDataChat,
  qs as initDataChatInstance,
  Us as initDataChatType,
  Hs as initDataHash,
  Ws as initDataQueryId,
  mo as initDataRaw,
  zs as initDataReceiver,
  Fs as initDataStartParam,
  We as initDataState,
  Js as initDataUser,
  Zi as invoice,
  qr as invokeCustomMethod,
  $i as isAbortError,
  Rt as isAuthenticatingBiometry,
  lt as isBackButtonMounted,
  os as isBackButtonSupported,
  ge as isBackButtonVisible,
  Wt as isBiometryMounted,
  io as isBiometryMounting,
  hs as isBiometrySupported,
  Ui as isCanceledError,
  dt as isClosingBehaviorMounted,
  we as isClosingConfirmationEnabled,
  Ts as isCloudStorageSupported,
  go as isColorDark,
  Vs as isHapticFeedbackSupported,
  mr as isIframe,
  Pt as isInvoiceOpened,
  Qs as isInvoiceSupported,
  la as isMainButtonEnabled,
  da as isMainButtonLoaderVisible,
  ft as isMainButtonMounted,
  _a as isMainButtonVisible,
  kt as isMiniAppCssVarsBound,
  Pa as isMiniAppDark,
  gt as isMiniAppMounted,
  Ta as isMiniAppSupported,
  Dt as isPopupOpened,
  La as isPopupSupported,
  Q as isQrScannerOpened,
  Ha as isQrScannerSupported,
  ct as isRGB,
  Qo as isRGBShort,
  Dn as isRecord,
  Bt as isRequestingBiometryAccess,
  de as isRequestingPhoneAccess,
  _e as isRequestingWriteAccess,
  bn as isSSR,
  Ja as isSecondaryButtonEnabled,
  Ya as isSecondaryButtonLoaderVisible,
  wt as isSecondaryButtonMounted,
  ei as isSecondaryButtonSupported,
  Qa as isSecondaryButtonVisible,
  yt as isSettingsButtonMounted,
  ii as isSettingsButtonSupported,
  ve as isSettingsButtonVisible,
  Et as isSwipeBehaviorMounted,
  fi as isSwipeBehaviorSupported,
  fn as isTMA,
  Tt as isThemeParamsCssVarsBound,
  na as isThemeParamsDark,
  _t as isThemeParamsMounted,
  ji as isTimeoutError,
  Ce as isVerticalSwipesEnabled,
  xt as isViewportCssVarsBound,
  Ei as isViewportExpanded,
  se as isViewportMounted,
  No as isViewportMounting,
  Si as isViewportStable,
  Xi as mainButton,
  ua as mainButtonBackgroundColor,
  pa as mainButtonHasShineEffect,
  Je as mainButtonState,
  fa as mainButtonText,
  ha as mainButtonTextColor,
  Li as mergeClassNames,
  tc as miniApp,
  ht as miniAppBackgroundColor,
  mt as miniAppBottomBarColor,
  Ze as miniAppBottomBarColorRGB,
  bt as miniAppHeaderColor,
  Ro as miniAppHeaderColorRGB,
  Ma as miniAppReady,
  Bo as miniAppState,
  qi as mockTelegramEnv,
  ss as mountBackButton,
  Es as mountBiometry,
  Bs as mountClosingBehavior,
  ga as mountMainButton,
  xa as mountMiniApp,
  ni as mountSecondaryButton,
  ui as mountSettingsButton,
  gi as mountSwipeBehavior,
  vo as mountThemeParams,
  Ti as mountViewport,
  F as off,
  is as offBackButtonClick,
  ya as offMainButtonClick,
  ri as offSecondaryButtonClick,
  li as offSettingsButtonClick,
  v as on,
  as as onBackButtonClick,
  wa as onMainButtonClick,
  oi as onSecondaryButtonClick,
  pi as onSettingsButtonClick,
  ws as openBiometrySettings,
  Ks as openInvoice,
  cc as openLink,
  ja as openPopup,
  za as openQrScanner,
  xi as openTelegramLink,
  Ki as parseInitData,
  va as parseThemeParams,
  ec as popup,
  De as postEvent,
  nc as qrScanner,
  _c as readTextFromClipboard,
  jr as removeEventHandlers,
  xe as request,
  ls as requestBiometry,
  ys as requestBiometryAccess,
  pc as requestContact,
  Vi as requestPhoneAccess,
  Ai as requestViewport,
  lc as requestWriteAccess,
  Gs as restoreInitData,
  G as retrieveLaunchParams,
  bc as safeCall,
  oc as secondaryButton,
  Ga as secondaryButtonBackgroundColor,
  Fa as secondaryButtonHasShineEffect,
  Ka as secondaryButtonPosition,
  on as secondaryButtonState,
  Za as secondaryButtonText,
  Xa as secondaryButtonTextColor,
  fc as sendData,
  Ni as serializeLaunchParams,
  Xo as serializeThemeParams,
  Ms as setCloudStorageItem,
  Te as setCssVar,
  Ea as setMainButtonParams,
  To as setMiniAppBackgroundColor,
  ko as setMiniAppBottomBarColor,
  Oo as setMiniAppHeaderColor,
  si as setSecondaryButtonParams,
  rc as settingsButton,
  hc as shareStory,
  uc as shareURL,
  cs as showBackButton,
  di as showSettingsButton,
  Hi as subscribe,
  z as supports,
  sc as swipeBehavior,
  mc as switchInlineQuery,
  ac as themeParams,
  Zs as themeParamsAccentTextColor,
  Ge as themeParamsBackgroundColor,
  yo as themeParamsBottomBarBgColor,
  Fe as themeParamsButtonColor,
  wo as themeParamsButtonTextColor,
  Xs as themeParamsDestructiveTextColor,
  ta as themeParamsHeaderBackgroundColor,
  ea as themeParamsHintColor,
  oa as themeParamsLinkColor,
  Nt as themeParamsSecondaryBackgroundColor,
  ra as themeParamsSectionBackgroundColor,
  sa as themeParamsSectionHeaderTextColor,
  aa as themeParamsSectionSeparatorColor,
  q as themeParamsState,
  ia as themeParamsSubtitleTextColor,
  ca as themeParamsTextColor,
  On as toRGB,
  Tn as toRecord,
  us as unmountBackButton,
  Ss as unmountBiometry,
  Ps as unmountClosingBehavior,
  Sa as unmountMainButton,
  Va as unmountMiniApp,
  ai as unmountSecondaryButton,
  _i as unmountSettingsButton,
  wi as unmountSwipeBehavior,
  Ba as unmountThemeParams,
  ki as unmountViewport,
  Wi as unsubscribe,
  vs as updateBiometryToken,
  wc as useLaunchParams,
  yc as useSignal,
  ic as viewport,
  yi as viewportHeight,
  Lo as viewportMountError,
  vi as viewportStableHeight,
  k as viewportState,
  Ci as viewportWidth
};
//# sourceMappingURL=index.js.map
